<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<rules>
  <functions>
    <hostmap config="/WEB-INF/hostmap.txt"/>
  </functions>
  <rule dir="OUT" name="WEBHDFS/webhdfs/outbound" pattern="hdfs://*:*/{path=**}?{**}">
    <rewrite template="{$frontend[url]}/webhdfs/v1/{path=**}?{**}"/>
  </rule>
  <rule dir="OUT" name="WEBHDFS/webhdfs/outbound" pattern="webhdfs://*:*/{path=**}?{**}">
    <rewrite template="{$frontend[url]}/webhdfs/v1/{path=**}?{**}"/>
  </rule>
  <rule dir="OUT" name="WEBHDFS/webhdfs/outbound/namenode/headers/location">
    <match pattern="{scheme}://{host}:{port}/{path=**}?{**}"/>
    <rewrite template="{$frontend[url]}/webhdfs/data/v1/{path=**}?{scheme}?host={$hostmap(host)}?{port}?{**}"/>
    <encrypt-query/>
  </rule>
  <rule dir="IN" name="WEBHDFS/webhdfs/inbound/hdfs" pattern="hdfs:/{path=**}?{**}">
    <rewrite template="{$serviceMappedUrl[NAMENODE]}/{path=**}?{**}"/>
  </rule>
  <rule dir="IN" name="WEBHDFS/webhdfs/inbound/webhdfs" pattern="webhdfs:/{path=**}?{**}">
    <rewrite template="{$serviceUrl[WEBHDFS]}/{path=**}?{**}"/>
  </rule>
  <rule dir="IN" name="WEBHDFS/webhdfs/inbound/namenode/root" pattern="*://*:*/**/webhdfs/{version}/?{**}">
    <rewrite template="{$serviceUrl[WEBHDFS]}/{version}/?{**}"/>
  </rule>
  <rule dir="IN" name="WEBHDFS/webhdfs/inbound/namenode/file" pattern="*://*:*/**/webhdfs/{version}/{path=**}?{**}">
    <rewrite template="{$serviceUrl[WEBHDFS]}/{version}/{path=**}?{**}"/>
  </rule>
  <rule dir="IN" name="WEBHDFS/webhdfs/inbound/namenode/home" pattern="*://*:*/**/webhdfs/{version}/~?{**}">
    <rewrite template="{$serviceUrl[WEBHDFS]}/{version}/user/{$username}?{**}"/>
  </rule>
  <rule dir="IN" name="WEBHDFS/webhdfs/inbound/namenode/home/file" pattern="*://*:*/**/webhdfs/{version}/~/{path=**}?{**}">
    <rewrite template="{$serviceUrl[WEBHDFS]}/{version}/user/{$username}/{path=**}?{**}"/>
  </rule>
  <rule dir="IN" name="WEBHDFS/webhdfs/inbound/datanode">
    <decrypt-query/>
    <match pattern="*://*:*/**/webhdfs/data/*/{path=**}?{scheme}?{host}?{port}?{**}"/>
    <rewrite template="{scheme}://{host}:{port}/{path=**}?{**}"/>
  </rule>
  <rule dir="IN" name="WEBHCAT/webhcat/root/inbound" pattern="*://*:*/**/templeton/v1/?{**}">
    <rewrite template="{$serviceUrl[WEBHCAT]}/v1/?{**}"/>
  </rule>
  <rule dir="IN" name="WEBHCAT/webhcat/path/inbound" pattern="*://*:*/**/templeton/v1/{path=**}?{**}">
    <rewrite template="{$serviceUrl[WEBHCAT]}/v1/{path=**}?{**}"/>
  </rule>
  <rule dir="IN" name="OOZIE/oozie/root" pattern="*://*:*/**/oozie/{**}?{**}">
    <rewrite template="{$serviceUrl[OOZIE]}/{**}?{**}"/>
  </rule>
  <rule dir="IN" name="OOZIE/oozie/v1" pattern="*://*:*/**/oozie/v1/{**}?{**}">
    <rewrite template="{$serviceUrl[OOZIE]}/v1/{**}?{**}"/>
  </rule>
  <rule dir="IN" name="OOZIE/oozie/v2" pattern="*://*:*/**/oozie/v2/{**}?{**}">
    <rewrite template="{$serviceUrl[OOZIE]}/v2/{**}?{**}"/>
  </rule>
  <rule name="OOZIE/oozie/user-name">
    <rewrite template="{$username}"/>
  </rule>
  <rule name="OOZIE/oozie/name-node-url">
    <rewrite template="hdfs://{$serviceMappedAddr[NAMENODE]}"/>
  </rule>
  <rule name="OOZIE/oozie/job-tracker-address">
    <rewrite template="{$serviceMappedAddr[JOBTRACKER]}"/>
  </rule>
  <rule flow="OR" name="OOZIE/oozie/hdfs-path">
    <match pattern="/~">
      <rewrite template="hdfs://{$serviceMappedAddr[NAMENODE]}/user/{$username}"/>
    </match>
    <match pattern="/~/{path=**}">
      <rewrite template="hdfs://{$serviceMappedAddr[NAMENODE]}/user/{$username}/{path=**}"/>
    </match>
    <match pattern="{var=${*}}/{path=**}">
      <rewrite template="{var}/{path=**}"/>
    </match>
    <match pattern="{path=**}">
      <rewrite template="{$serviceMappedUrl[NAMENODE]}/{path=**}"/>
    </match>
  </rule>
  <rule dir="IN" name="WEBHBASE/webhbase/root/inbound" pattern="*://*:*/**/hbase/?{**}">
    <rewrite template="{$serviceUrl[WEBHBASE]}/?{**}"/>
  </rule>
  <rule dir="IN" name="WEBHBASE/webhbase/path/inbound" pattern="*://*:*/**/hbase/{path=**}?{**}">
    <rewrite template="{$serviceUrl[WEBHBASE]}/{path=**}?{**}"/>
  </rule>
  <rule name="WEBHBASE/webhbase/location/outbound">
    <match pattern="*://*:*/{path=**}?{**}"/>
    <rewrite template="{$frontend[url]}/hbase/{path=**}?{**}"/>
  </rule>
  <rule name="WEBHBASE/webhbase/address/outbound">
    <match pattern="{host}:{port}"/>
    <rewrite template="{$frontend[url]}/hbase-region?host={host}?port={port}"/>
    <encrypt-query/>
  </rule>
  <rule dir="IN" name="HIVE/hive/inbound" pattern="*://*:*/**/hive">
    <rewrite template="{$serviceUrl[HIVE]}"/>
  </rule>
  <rule dir="IN" name="RESOURCEMANAGER/resourcemanager/inbound/root" pattern="*://*:*/**/resourcemanager/v1/?{**}">
    <rewrite template="{$serviceUrl[RESOURCEMANAGER]}/v1/?{**}"/>
  </rule>
  <rule dir="IN" name="RESOURCEMANAGER/resourcemanager/inbound/path" pattern="*://*:*/**/resourcemanager/v1/{path=**}?{**}">
    <rewrite template="{$serviceUrl[RESOURCEMANAGER]}/v1/{path=**}/?{**}"/>
  </rule>
  <rule dir="IN" name="RESOURCEMANAGER/resourcemanager/inbound/proxy" pattern="*://*:*/**/resourcemanager/proxy/{appid=*}/ws/v1/{path=**}?{**}">
    <decrypt-query/>
    <match pattern="*://*:*/**/resourcemanager/proxy/{appid=*}/ws/v1/{path=**}?{scheme}?{host}?{port}?{**}"/>
    <rewrite template="{scheme}://{host}:{port}/proxy/{appid=*}/ws/v1/{path=**}?{**}"/>
  </rule>
  <rule dir="OUT" name="RESOURCEMANAGER/resourcemanager/url/outbound">
    <match pattern="*://*:*/**?**"/>
    <rewrite/>
  </rule>
  <rule dir="OUT" name="RESOURCEMANAGER/resourcemanager/trackingUrlHistory/outbound">
    <match pattern="{scheme}://{host}:{port}/proxy/{appid=*}/jobhistory/job/**"/>
    <rewrite/>
  </rule>
  <rule dir="OUT" name="RESOURCEMANAGER/resourcemanager/trackingUrlAM/outbound">
    <match pattern="{scheme}://{host}:{port}/proxy/{appid=*}"/>
    <rewrite template="{$frontend[url]}/resourcemanager/proxy/{appid=*}?{scheme}?host={$hostmap(host)}?{port}?{**}"/>
    <encrypt-query/>
  </rule>
  <rule dir="OUT" name="RESOURCEMANAGER/resourcemanager/hostport/outbound">
    <match pattern="*:*"/>
    <rewrite/>
  </rule>
  <rule dir="OUT" name="RESOURCEMANAGER/resourcemanager/logsLink/outbound">
    <match pattern="//*:*/**?**"/>
    <rewrite/>
  </rule>
  <rule dir="OUT" name="RESOURCEMANAGER/resourcemanager/host/outbound">
    <rewrite/>
  </rule>
  <rule dir="OUT" name="RESOURCEMANAGER/resourcemanager/nodeId/outbound">
    <match pattern="{host=*}:{port=*}"/>
    <encrypt param="encaddr" template="{host}:{port}"/>
    <rewrite template="{encaddr}"/>
  </rule>
  <rule dir="IN" name="RESOURCEMANAGER/resourcemanager/nodeId/inbound">
    <match pattern="*://*:*/**/resourcemanager/v1/cluster/nodes/{addr=*}?{**}"/>
    <decrypt param="addr"/>
    <rewrite template="{$serviceUrl[RESOURCEMANAGER]}/v1/cluster/nodes/{addr}?{**}"/>
  </rule>
  <filter name="WEBHDFS/webhdfs/outbound/namenode/headers">
    <content type="application/x-http-headers">
      <apply path="Location" rule="WEBHDFS/webhdfs/outbound/namenode/headers/location"/>
    </content>
  </filter>
  <filter name="OOZIE/oozie/configuration">
    <content type="*/xml">
      <buffer path="/configuration/property">
        <detect path="name" value="user.name">
          <apply path="value" rule="OOZIE/oozie/user-name"/>
        </detect>
        <detect path="name" value="nameNode">
          <apply path="value" rule="OOZIE/oozie/name-node-url"/>
        </detect>
        <detect path="name" value="jobTracker">
          <apply path="value" rule="OOZIE/oozie/job-tracker-address"/>
        </detect>
        <detect path="name" value="fs.default.name">
          <apply path="value" rule="OOZIE/oozie/name-node-url"/>
        </detect>
        <detect path="name" value="fs.defaultFS">
          <apply path="value" rule="OOZIE/oozie/name-node-url"/>
        </detect>
        <detect path="name" value="oozie.wf.application.path">
          <apply path="value" rule="OOZIE/oozie/hdfs-path"/>
        </detect>
        <detect path="name" value="oozie.coord.application.path">
          <apply path="value" rule="OOZIE/oozie/hdfs-path"/>
        </detect>
        <detect path="name" value="oozie.bundle.application.path">
          <apply path="value" rule="OOZIE/oozie/hdfs-path"/>
        </detect>
        <detect path="name" value="oozie.libpath">
          <apply path="value" rule="OOZIE/oozie/hdfs-path"/>
        </detect>
        <detect path="name" value="mapreduce.job.user.name">
          <apply path="value" rule="OOZIE/oozie/user-name"/>
        </detect>
        <detect path="name" value="mapred.job.tracker">
          <apply path="value" rule="OOZIE/oozie/job-tracker-address"/>
        </detect>
        <detect path="name" value="mapred.input.dir">
          <apply path="value" rule="OOZIE/oozie/hdfs-path"/>
        </detect>
        <detect path="name" value="inputDir">
          <apply path="value" rule="OOZIE/oozie/hdfs-path"/>
        </detect>
        <detect path="name" value="mapred.output.dir">
          <apply path="value" rule="OOZIE/oozie/hdfs-path"/>
        </detect>
        <detect path="name" value="outputDir">
          <apply path="value" rule="OOZIE/oozie/hdfs-path"/>
        </detect>
      </buffer>
    </content>
    <content type="*/json">
      <apply path="$[user.name]" rule="OOZIE/oozie/user-name"/>
      <apply path="$[nameNode]" rule="OOZIE/oozie/name-node-url"/>
      <apply path="$[jobTracker]" rule="OOZIE/oozie/job-tracker-addr"/>
      <apply path="$[fs.default.name]" rule="OOZIE/oozie/name-node-url"/>
      <apply path="$[fs.defaultFS]" rule="OOZIE/oozie/name-node-url"/>
      <apply path="$[oozie.wf.application.path]" rule="OOZIE/oozie/hdfs-path"/>
      <apply path="$[oozie.coord.application.path]" rule="OOZIE/oozie/hdfs-path"/>
      <apply path="$[oozie.bundle.application.path]" rule="OOZIE/oozie/hdfs-path"/>
      <apply path="$[oozie.libpath]" rule="OOZIE/oozie/hdfs-path"/>
      <apply path="$[mapreduce.job.user.name]" rule="OOZIE/oozie/user-name"/>
      <apply path="$[mapred.job.tracker]" rule="OOZIE/oozie/job-tracker-address"/>
      <apply path="$[mapred.input.dir]" rule="OOZIE/oozie/hdfs-path"/>
      <apply path="$[mapred.output.dir]" rule="OOZIE/oozie/hdfs-path"/>
    </content>
  </filter>
  <filter name="WEBHBASE/webhbase/headers/outbound">
    <content type="application/x-http-headers">
      <apply path="Location" rule="WEBHBASE/webhbase/location/outbound"/>
    </content>
  </filter>
  <filter name="WEBHBASE/webhbase/status/outbound">
    <content type="*/json">
      <apply path="$[LiveNodes][*][name]" rule="WEBHBASE/webhbase/address/outbound"/>
    </content>
    <content type="*/xml">
      <apply path="/ClusterStatus/LiveNodes/Node/@name" rule="WEBHBASE/webhbase/address/outbound"/>
    </content>
  </filter>
  <filter name="WEBHBASE/webhbase/regions/outbound">
    <content type="*/json">
      <apply path="$[Region][*][location]" rule="WEBHBASE/webhbase/address/outbound"/>
    </content>
    <content type="*/xml">
      <apply path="/TableInfo/Region/@location" rule="WEBHBASE/webhbase/address/outbound"/>
    </content>
  </filter>
  <filter name="RESOURCEMANAGER/resourcemanager/apps/outbound">
    <content type="*/json">
      <buffer path="$.apps.app[*]">
        <detect path="$.trackingUI" value="History">
          <apply path="$.trackingUrl" rule="RESOURCEMANAGER/resourcemanager/url/outbound"/>
        </detect>
        <detect path="$.trackingUI" value="ApplicationMaster">
          <apply path="$.trackingUrl" rule="RESOURCEMANAGER/resourcemanager/trackingUrlAM/outbound"/>
        </detect>
        <apply path="$.amContainerLogs" rule="RESOURCEMANAGER/resourcemanager/url/outbound"/>
        <apply path="$.amHostHttpAddress" rule="RESOURCEMANAGER/resourcemanager/hostport/outbound"/>
      </buffer>
    </content>
    <content type="*/xml">
      <buffer path="/apps/app">
        <detect path="trackingUI" value="History">
          <apply path="trackingUrl" rule="RESOURCEMANAGER/resourcemanager/url/outbound"/>
        </detect>
        <detect path="trackingUI" value="ApplicationMaster">
          <apply path="trackingUrl" rule="RESOURCEMANAGER/resourcemanager/trackingUrlAM/outbound"/>
        </detect>
        <apply path="amContainerLogs" rule="RESOURCEMANAGER/resourcemanager/url/outbound"/>
        <apply path="amHostHttpAddress" rule="RESOURCEMANAGER/resourcemanager/hostport/outbound"/>
      </buffer>
    </content>
  </filter>
  <filter name="RESOURCEMANAGER/resourcemanager/app/outbound">
    <content type="*/json">
      <buffer path="$.app">
        <detect path="$.trackingUI" value="History">
          <apply path="$.trackingUrl" rule="RESOURCEMANAGER/resourcemanager/url/outbound"/>
        </detect>
        <detect path="$.trackingUI" value="ApplicationMaster">
          <apply path="$.trackingUrl" rule="RESOURCEMANAGER/resourcemanager/trackingUrlAM/outbound"/>
        </detect>
        <apply path="$.amContainerLogs" rule="RESOURCEMANAGER/resourcemanager/url/outbound"/>
        <apply path="$.amHostHttpAddress" rule="RESOURCEMANAGER/resourcemanager/hostport/outbound"/>
      </buffer>
    </content>
    <content type="*/xml">
      <buffer path="/app">
        <detect path="trackingUI" value="History">
          <apply path="trackingUrl" rule="RESOURCEMANAGER/resourcemanager/url/outbound"/>
        </detect>
        <detect path="trackingUI" value="ApplicationMaster">
          <apply path="trackingUrl" rule="RESOURCEMANAGER/resourcemanager/trackingUrlAM/outbound"/>
        </detect>
        <apply path="amContainerLogs" rule="RESOURCEMANAGER/resourcemanager/url/outbound"/>
        <apply path="amHostHttpAddress" rule="RESOURCEMANAGER/resourcemanager/hostport/outbound"/>
      </buffer>
    </content>
  </filter>
  <filter name="RESOURCEMANAGER/resourcemanager/appattempts/outbound">
    <content type="*/json">
      <apply path="$.appAttempts.appAttempt[*].nodeHttpAddress" rule="RESOURCEMANAGER/resourcemanager/hostport/outbound"/>
      <apply path="$.appAttempts.appAttempt[*].logsLink" rule="RESOURCEMANAGER/resourcemanager/logsLink/outbound"/>
      <apply path="$.appAttempts.appAttempt[*].nodeId" rule="RESOURCEMANAGER/resourcemanager/nodeId/outbound"/>
    </content>
    <content type="*/xml">
      <apply path="/appAttempts/appAttempt/nodeHttpAddress" rule="RESOURCEMANAGER/resourcemanager/hostport/outbound"/>
      <apply path="/appAttempts/appAttempt/logsLink" rule="RESOURCEMANAGER/resourcemanager/logsLink/outbound"/>
      <apply path="/appAttempts/appAttempt/nodeId" rule="RESOURCEMANAGER/resourcemanager/nodeId/outbound"/>
    </content>
  </filter>
  <filter name="RESOURCEMANAGER/resourcemanager/nodes/outbound">
    <content type="*/json">
      <apply path="$.nodes.node[*].nodeHTTPAddress" rule="RESOURCEMANAGER/resourcemanager/hostport/outbound"/>
      <apply path="$.nodes.node[*].nodeHostName" rule="RESOURCEMANAGER/resourcemanager/host/outbound"/>
      <apply path="$.nodes.node[*].id" rule="RESOURCEMANAGER/resourcemanager/nodeId/outbound"/>
    </content>
    <content type="*/xml">
      <apply path="/nodes/node/nodeHTTPAddress" rule="RESOURCEMANAGER/resourcemanager/hostport/outbound"/>
      <apply path="/nodes/node/nodeHostName" rule="RESOURCEMANAGER/resourcemanager/host/outbound"/>
      <apply path="/nodes/node/id" rule="RESOURCEMANAGER/resourcemanager/nodeId/outbound"/>
    </content>
  </filter>
  <filter name="RESOURCEMANAGER/resourcemanager/node/outbound">
    <content type="*/json">
      <apply path="$.node.nodeHTTPAddress" rule="RESOURCEMANAGER/resourcemanager/hostport/outbound"/>
      <apply path="$.node.nodeHostName" rule="RESOURCEMANAGER/resourcemanager/host/outbound"/>
      <apply path="$.node.id" rule="RESOURCEMANAGER/resourcemanager/nodeId/outbound"/>
    </content>
    <content type="*/xml">
      <apply path="/node/nodeHTTPAddress" rule="RESOURCEMANAGER/resourcemanager/hostport/outbound"/>
      <apply path="/node/nodeHostName" rule="RESOURCEMANAGER/resourcemanager/host/outbound"/>
      <apply path="/node/id" rule="RESOURCEMANAGER/resourcemanager/nodeId/outbound"/>
    </content>
  </filter>
  <filter name="RESOURCEMANAGER/resourcemanager/proxy/jobattempts/outbound">
    <content type="*/json">
      <apply path="$.jobAttempts.jobAttempt[*].nodeHttpAddress" rule="RESOURCEMANAGER/resourcemanager/hostport/outbound"/>
      <apply path="$.jobAttempts.jobAttempt[*].nodeId" rule="RESOURCEMANAGER/resourcemanager/nodeId/outbound"/>
      <apply path="$.jobAttempts.jobAttempt[*].logsLink" rule="RESOURCEMANAGER/resourcemanager/url/outbound"/>
    </content>
    <content type="*/xml">
      <apply path="/jobAttempts/jobAttempt/nodeHttpAddress" rule="RESOURCEMANAGER/resourcemanager/hostport/outbound"/>
      <apply path="/jobAttempts/jobAttempt/nodeId" rule="RESOURCEMANAGER/resourcemanager/nodeId/outbound"/>
      <apply path="/jobAttempts/jobAttempt/logsLink" rule="RESOURCEMANAGER/resourcemanager/url/outbound"/>
    </content>
  </filter>
  <filter name="RESOURCEMANAGER/resourcemanager/proxy/taskattempts/outbound">
    <content type="*/json">
      <apply path="$.taskAttempts.taskAttempt[*].nodeHttpAddress" rule="RESOURCEMANAGER/resourcemanager/hostport/outbound"/>
    </content>
    <content type="*/xml">
      <apply path="/taskAttempts/taskAttempt/nodeHttpAddress" rule="RESOURCEMANAGER/resourcemanager/hostport/outbound"/>
    </content>
  </filter>
  <filter name="RESOURCEMANAGER/resourcemanager/proxy/taskattempt/outbound">
    <content type="*/json">
      <apply path="$.taskAttempt.nodeHttpAddress" rule="RESOURCEMANAGER/resourcemanager/hostport/outbound"/>
    </content>
    <content type="*/xml">
      <apply path="/taskAttempt/nodeHttpAddress" rule="RESOURCEMANAGER/resourcemanager/hostport/outbound"/>
    </content>
  </filter>
</rules>
